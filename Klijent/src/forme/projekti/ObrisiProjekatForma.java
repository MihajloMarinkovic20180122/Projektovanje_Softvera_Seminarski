/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package forme.projekti;

import domen.Prioritet;
import domen.Projekat;
import domen.Zaposleni;
import java.io.IOException;
import java.text.SimpleDateFormat;
import java.util.LinkedList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import kontroler.KlijentKontroler;
import kontroler.KlijentKontrolerProjekat;
import kontroler.KlijentKontrolerZaposleni;
import modeli.ModelTabeleProjekti;
import modeli.ModelTabeleZaposleni;

/**
 *
 * @author Mihajlo
 */
public class ObrisiProjekatForma extends javax.swing.JDialog {

    /**
     * Creates new form ObrisiProjekatForma
     */
    ModelTabeleProjekti mtp;
    ModelTabeleZaposleni mtz;
    Projekat odabraniProjekat;
    public ObrisiProjekatForma(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        try {
            initComponents();
            setLocationRelativeTo(null);
            setTitle("Izmena i Brisanje projekta");
            tblProjekti.setAutoCreateRowSorter(true);
            mtp = new ModelTabeleProjekti();
            tblProjekti.setModel(mtp);
            mtz = new ModelTabeleZaposleni();
            tblZaposleni.setModel(mtz);
            popuniTabeluSvimProjektima();
            popuniCmbRukovodilac();
            popuniCmbPrioriter();
            popuniCmbZaposleni();
        } catch (Exception ex) {
            Logger.getLogger(ObrisiProjekatForma.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        txtPretraga = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblProjekti = new javax.swing.JTable();
        btnPronadjiProjekat = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        btnObrisi = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        txtPocetakRealizacijeProjekta = new javax.swing.JFormattedTextField();
        cmbRukovodilacProjekta = new javax.swing.JComboBox<>();
        cmbPrioritetProjekta = new javax.swing.JComboBox();
        jLabel1 = new javax.swing.JLabel();
        cmbZaposleni = new javax.swing.JComboBox<>();
        lblNazivProjekta = new javax.swing.JLabel();
        btnDodajZaposlenog = new javax.swing.JButton();
        lblNazivProjekta1 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblZaposleni = new javax.swing.JTable();
        lblRukovodilacProjekta = new javax.swing.JLabel();
        lblPrioritetProjekta = new javax.swing.JLabel();
        btnObrisiZaposlenog = new javax.swing.JButton();
        txtNazivProjekta = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Pronađi projekat"));

        tblProjekti.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblProjekti.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblProjektiMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblProjekti);

        btnPronadjiProjekat.setText("Pronađi");
        btnPronadjiProjekat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPronadjiProjekatActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 481, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(txtPretraga)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnPronadjiProjekat)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtPretraga, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnPronadjiProjekat))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1)
                .addContainerGap())
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Učitani projekat"));

        btnObrisi.setText("Obriši projekat");
        btnObrisi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnObrisiActionPerformed(evt);
            }
        });

        jButton1.setText("Izmeni projekat");

        try {
            txtPocetakRealizacijeProjekta.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##.##.####.")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        jLabel1.setText("Zaposleni:");

        lblNazivProjekta.setText("Naziv:");

        btnDodajZaposlenog.setText("Dodaj");
        btnDodajZaposlenog.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDodajZaposlenogActionPerformed(evt);
            }
        });

        lblNazivProjekta1.setText("Pocetak realizacije:");

        tblZaposleni.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane3.setViewportView(tblZaposleni);

        lblRukovodilacProjekta.setText("Rukovodilac:");

        lblPrioritetProjekta.setText("Prioritet:");

        btnObrisiZaposlenog.setText("Obriši");
        btnObrisiZaposlenog.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnObrisiZaposlenogActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap(409, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnObrisi)
                .addContainerGap())
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel2Layout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel2Layout.createSequentialGroup()
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(lblNazivProjekta1)
                                .addComponent(lblRukovodilacProjekta)
                                .addComponent(lblPrioritetProjekta)
                                .addComponent(lblNazivProjekta)
                                .addComponent(jLabel1))
                            .addGap(15, 15, 15)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(txtNazivProjekta)
                                .addComponent(txtPocetakRealizacijeProjekta)
                                .addComponent(cmbRukovodilacProjekta, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(cmbPrioritetProjekta, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                    .addComponent(cmbZaposleni, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(btnDodajZaposlenog)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(btnObrisiZaposlenog, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 633, Short.MAX_VALUE))
                    .addContainerGap()))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnObrisi)
                    .addComponent(jButton1))
                .addContainerGap())
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel2Layout.createSequentialGroup()
                    .addGap(11, 11, 11)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lblNazivProjekta)
                        .addComponent(txtNazivProjekta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lblNazivProjekta1)
                        .addComponent(txtPocetakRealizacijeProjekta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lblRukovodilacProjekta)
                        .addComponent(cmbRukovodilacProjekta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lblPrioritetProjekta)
                        .addComponent(cmbPrioritetProjekta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel1)
                        .addComponent(cmbZaposleni, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnDodajZaposlenog)
                        .addComponent(btnObrisiZaposlenog))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 271, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(39, Short.MAX_VALUE)))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnPronadjiProjekatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPronadjiProjekatActionPerformed
        try {
            String pretraga = txtPretraga.getText();
            LinkedList<Projekat> listaProjekataIzPretrage = KlijentKontrolerProjekat.getInstanca().pronadjiPaVratiProjekte(pretraga);
            ModelTabeleProjekti mtp =  (ModelTabeleProjekti) tblProjekti.getModel();
            mtp.setListaProjekata(listaProjekataIzPretrage);
        } catch (Exception ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(rootPane, ex.getMessage());
        }
    }//GEN-LAST:event_btnPronadjiProjekatActionPerformed

    private void btnObrisiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnObrisiActionPerformed
        try {
            int red = tblProjekti.getSelectedRow();
            Projekat projekat = mtp.vratiOdabraniProjekat(red);
            
            KlijentKontrolerProjekat.getInstanca().obrisiProjekat(projekat);
            mtp.setListaProjekata(KlijentKontrolerProjekat.getInstanca().vratiProjekte());
            JOptionPane.showMessageDialog(rootPane, "Uspesno ste obrisali projekat: " + projekat);

        } catch (Exception ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(rootPane, ex.getMessage());
        }
    }//GEN-LAST:event_btnObrisiActionPerformed

    private void btnDodajZaposlenogActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDodajZaposlenogActionPerformed
        Zaposleni zaposleni = (Zaposleni) cmbZaposleni.getSelectedItem();
        ModelTabeleZaposleni mtz = (ModelTabeleZaposleni) tblZaposleni.getModel();
        LinkedList<Zaposleni> listaZaposlenihUTabeli = mtz.vratiListu();
        if(listaZaposlenihUTabeli.size() > 0){
            if(listaZaposlenihUTabeli.contains(zaposleni)){
                JOptionPane.showMessageDialog(rootPane, "Zaposleni je vec dodat.", "Obaveštenje", JOptionPane.INFORMATION_MESSAGE);
            } else {
                mtz.dodajZaposlenog(zaposleni);
            }
        } else {
            mtz.dodajZaposlenog(zaposleni);
        }

    }//GEN-LAST:event_btnDodajZaposlenogActionPerformed

    private void btnObrisiZaposlenogActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnObrisiZaposlenogActionPerformed
        int red = tblZaposleni.getSelectedRow();
        if(red != -1){
            ModelTabeleZaposleni mtz = (ModelTabeleZaposleni) tblZaposleni.getModel();
            mtz.obrisiZaposlenog(red);
        } else {
            JOptionPane.showMessageDialog(rootPane, "Odaberite zaposlenog iz liste kod zelite da uklonite sa projekta.", "Obaveštenje", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_btnObrisiZaposlenogActionPerformed

    private void tblProjektiMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblProjektiMouseClicked
        try{
            int red = tblProjekti.getSelectedRow();
            if(red == -1){

            } else {
                ModelTabeleProjekti mtp = (ModelTabeleProjekti) tblProjekti.getModel();
                odabraniProjekat = mtp.vratiOdabraniProjekat(red);
                Projekat ucitaniProjekat = KlijentKontrolerProjekat.getInstanca().ucitajProjekat(odabraniProjekat);
                popuniPodatkeUcitanogProjekta(ucitaniProjekat);
                //ModelTabeleZaposleni mtz = (ModelTabeleZaposleni) tblZaposleni.getModel();
                //odabraniZaposleni = mtz.vratiOdabranogZaposlenog(red);
                //Zaposleni ucitaniZaposleni = KlijentKontrolerZaposleni.getInstanca().ucitajZaposlenog(odabraniZaposleni);
    //            popuniPodatkeUcitanogZaposlenog(ucitaniZaposleni);
    //            btnIzmeniZaposlenog.setEnabled(true);
    //            btnObrisiZaposlenog.setEnabled(true);
            }
        } catch (Exception ex){
            ex.printStackTrace();
        }
    }//GEN-LAST:event_tblProjektiMouseClicked

    /**
     * @param args the command line arguments
     */
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDodajZaposlenog;
    private javax.swing.JButton btnObrisi;
    private javax.swing.JButton btnObrisiZaposlenog;
    private javax.swing.JButton btnPronadjiProjekat;
    private javax.swing.JComboBox cmbPrioritetProjekta;
    private javax.swing.JComboBox<Object> cmbRukovodilacProjekta;
    private javax.swing.JComboBox<Object> cmbZaposleni;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JLabel lblNazivProjekta;
    private javax.swing.JLabel lblNazivProjekta1;
    private javax.swing.JLabel lblPrioritetProjekta;
    private javax.swing.JLabel lblRukovodilacProjekta;
    private javax.swing.JTable tblProjekti;
    private javax.swing.JTable tblZaposleni;
    private javax.swing.JTextField txtNazivProjekta;
    private javax.swing.JFormattedTextField txtPocetakRealizacijeProjekta;
    private javax.swing.JTextField txtPretraga;
    // End of variables declaration//GEN-END:variables

    private void popuniTabeluSvimProjektima() throws Exception {
        LinkedList<Projekat> listaSvihProjekata = KlijentKontrolerProjekat.getInstanca().vratiProjekte();
        if (listaSvihProjekata.size() > 0) {
            ModelTabeleProjekti mtp = (ModelTabeleProjekti) tblProjekti.getModel();
            mtp.setListaProjekata(listaSvihProjekata);
        } else if(listaSvihProjekata.size() == 0) {
            JOptionPane.showMessageDialog(rootPane, "Ne postoji nijedan projekat.");
            this.dispose();
        } else {
            JOptionPane.showMessageDialog(rootPane, "Doslo je do greske prilikom pretrage projekata.");
            this.dispose();
        }
    }

    private void popuniCmbRukovodilac() throws Exception {
        cmbRukovodilacProjekta.removeAllItems();
        LinkedList<Zaposleni> listaRukovodioca = KlijentKontrolerZaposleni.getInstanca().vratiZaposlene();
        for (Zaposleni zaposleni : listaRukovodioca) {
            cmbRukovodilacProjekta.addItem(zaposleni);
        }
    }

    private void popuniCmbPrioriter() {
        cmbPrioritetProjekta.removeAllItems();
        for (Prioritet prioritet : Prioritet.values()) {
            cmbPrioritetProjekta.addItem(prioritet);
        }
    }

    private void popuniCmbZaposleni() throws Exception {
        cmbZaposleni.removeAllItems();
        LinkedList<Zaposleni> listaZaposlenih = KlijentKontrolerZaposleni.getInstanca().vratiZaposlene();
        for (Zaposleni zaposleni : listaZaposlenih) {
            cmbZaposleni.addItem(zaposleni);
        }
    }

    private void popuniPodatkeUcitanogProjekta(Projekat ucitaniProjekat) {
        txtNazivProjekta.setText(ucitaniProjekat.getNazivProjekta());
        SimpleDateFormat sdf = new SimpleDateFormat("dd.MM.yyyy.");
        txtPocetakRealizacijeProjekta.setText(sdf.format(ucitaniProjekat.getPocetakRealizacije()));
        cmbRukovodilacProjekta.setSelectedItem(ucitaniProjekat.getRukovodilac());
        cmbPrioritetProjekta.setSelectedItem(ucitaniProjekat.getPrioritet());
        ModelTabeleZaposleni mtz =  (ModelTabeleZaposleni) tblZaposleni.getModel();
        mtz.setListaZaposlenih(ucitaniProjekat.getZaposleni());
    
    }
}
