/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package forme.zaposleni;

import domen.OrganizacionaCelina;
import domen.RadnoMesto;
import domen.Zaposleni;
import java.io.IOException;
import java.net.SocketException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.LinkedList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import kontroler.KlijentKontroler;
import kontroler.KlijentKontrolerZaposleni;
import kontroler.OpstiKlijentskiKontroler;

/**
 *
 * @author Mihajlo
 */
public class DodajZaposlenogForma extends javax.swing.JDialog {

    /**
     * Creates new form DodajZaposlenogForma1
     */
    public DodajZaposlenogForma(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        try {
            initComponents();
            setLocationRelativeTo(null);
            setTitle("Dodavanje zaposlenog");
            popuniCmbOrganizacionaCelina();
        } catch (SocketException ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(rootPane, "Server nije pokrenut.");
            System.exit(0);
        }
        catch (Exception ex) {
            Logger.getLogger(DodajZaposlenogForma.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        cmbRadnoMesto = new javax.swing.JComboBox<>();
        lblPrezime = new javax.swing.JLabel();
        btnDodajZaposlenog = new javax.swing.JButton();
        lblEmail = new javax.swing.JLabel();
        lblDatumZaposlenja = new javax.swing.JLabel();
        lblOrganizacionaCelina = new javax.swing.JLabel();
        lblRadnoMesto = new javax.swing.JLabel();
        txtZaposleniIme = new javax.swing.JTextField();
        txtZaposleniPrezime = new javax.swing.JTextField();
        txtZaposleniEmail = new javax.swing.JTextField();
        txtZaposleniDatumZaposlenja = new javax.swing.JFormattedTextField();
        cmbOrganizacionaCelina = new javax.swing.JComboBox<>();
        lblImeZaposlenog = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        lblPrezime.setText("Prezime:");

        btnDodajZaposlenog.setText("Saƒçuvaj");
        btnDodajZaposlenog.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDodajZaposlenogActionPerformed(evt);
            }
        });

        lblEmail.setText("Email:");

        lblDatumZaposlenja.setText("Datum zaposlenja:");

        lblOrganizacionaCelina.setText("Organizaciona celina:");

        lblRadnoMesto.setText("Radno mesto:");

        try {
            txtZaposleniDatumZaposlenja.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##.##.####.")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        cmbOrganizacionaCelina.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbOrganizacionaCelinaActionPerformed(evt);
            }
        });

        lblImeZaposlenog.setText("Ime:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblImeZaposlenog)
                            .addComponent(lblPrezime)
                            .addComponent(lblEmail)
                            .addComponent(lblDatumZaposlenja)
                            .addComponent(lblOrganizacionaCelina)
                            .addComponent(lblRadnoMesto))
                        .addGap(15, 15, 15)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtZaposleniIme)
                            .addComponent(txtZaposleniPrezime)
                            .addComponent(txtZaposleniEmail)
                            .addComponent(txtZaposleniDatumZaposlenja)
                            .addComponent(cmbOrganizacionaCelina, 0, 260, Short.MAX_VALUE)
                            .addComponent(cmbRadnoMesto, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnDodajZaposlenog)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblImeZaposlenog)
                    .addComponent(txtZaposleniIme, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(6, 6, 6)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPrezime)
                    .addComponent(txtZaposleniPrezime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblEmail)
                    .addComponent(txtZaposleniEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblDatumZaposlenja)
                    .addComponent(txtZaposleniDatumZaposlenja, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblOrganizacionaCelina)
                    .addComponent(cmbOrganizacionaCelina, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmbRadnoMesto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblRadnoMesto))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnDodajZaposlenog)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cmbOrganizacionaCelinaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbOrganizacionaCelinaActionPerformed
        try {  
            OrganizacionaCelina organizacionaCelina = (OrganizacionaCelina) cmbOrganizacionaCelina.getSelectedItem();
            popuniCmbRadnoMesto(organizacionaCelina);
        } catch (Exception ex) {
            Logger.getLogger(DodajZaposlenogForma.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_cmbOrganizacionaCelinaActionPerformed

    private void btnDodajZaposlenogActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDodajZaposlenogActionPerformed
        try {
            String ime = txtZaposleniIme.getText();
            if(ime.isEmpty()){
                throw new Exception("Niste uneli ime.");
            }
            
            String prezime = txtZaposleniPrezime.getText();
            if(prezime.isEmpty()){
                throw new Exception("Niste uneli prezime.");
            }
            
            String email = txtZaposleniEmail.getText();
            if(email.isEmpty()){
                throw new Exception("Niste uneli email.");
            }
            
            if(txtZaposleniDatumZaposlenja.getText().contains(" ")){
                throw new Exception("Niste uneli datum zaposlenja.");
            }
            SimpleDateFormat sdf = new SimpleDateFormat("dd.MM.yyyy.");
            Date datumZaposlenja = sdf.parse(txtZaposleniDatumZaposlenja.getText());
            
            OrganizacionaCelina organizacionaCelina = (OrganizacionaCelina) cmbOrganizacionaCelina.getSelectedItem();
            RadnoMesto radnoMesto = (RadnoMesto) cmbRadnoMesto.getSelectedItem();
            
            Zaposleni zaposleni = new Zaposleni(0, ime, prezime, email, datumZaposlenja, organizacionaCelina, radnoMesto, null);

            KlijentKontrolerZaposleni.getInstanca().dodajZaposlenog(zaposleni);
            
            JOptionPane.showMessageDialog(rootPane, "Sistem je zapamtio zaposlenog.", "Uspe≈°no izvr≈°eno.", JOptionPane.INFORMATION_MESSAGE);

            txtZaposleniIme.setText("");
            txtZaposleniPrezime.setText("");
            txtZaposleniEmail.setText("");
            txtZaposleniDatumZaposlenja.setText("");
            cmbOrganizacionaCelina.setSelectedIndex(0);
            cmbRadnoMesto.setSelectedIndex(0);
            
        }  catch (Exception ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(rootPane, ex.getMessage(), "Doslo je do greske!", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnDodajZaposlenogActionPerformed

    /**
     * @param args the command line arguments
     */
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDodajZaposlenog;
    private javax.swing.JComboBox<Object> cmbOrganizacionaCelina;
    private javax.swing.JComboBox<Object> cmbRadnoMesto;
    private javax.swing.JLabel lblDatumZaposlenja;
    private javax.swing.JLabel lblEmail;
    private javax.swing.JLabel lblImeZaposlenog;
    private javax.swing.JLabel lblOrganizacionaCelina;
    private javax.swing.JLabel lblPrezime;
    private javax.swing.JLabel lblRadnoMesto;
    private javax.swing.JFormattedTextField txtZaposleniDatumZaposlenja;
    private javax.swing.JTextField txtZaposleniEmail;
    private javax.swing.JTextField txtZaposleniIme;
    private javax.swing.JTextField txtZaposleniPrezime;
    // End of variables declaration//GEN-END:variables

    private void popuniCmbOrganizacionaCelina() throws Exception {
        cmbOrganizacionaCelina.removeAllItems();

        LinkedList<OrganizacionaCelina> litsaOrganizacionihCelina = KlijentKontrolerZaposleni.getInstanca().vratiOrganizacioneCeline();
        for (OrganizacionaCelina organizacionaCelina : litsaOrganizacionihCelina) {
            cmbOrganizacionaCelina.addItem(organizacionaCelina);
        }
    }

    private void popuniCmbRadnoMesto(OrganizacionaCelina organizacionaCelina) throws Exception {
        cmbRadnoMesto.removeAllItems();

        try{
            LinkedList<RadnoMesto> listaRadnihMesta = KlijentKontrolerZaposleni.getInstanca().vratiRadnaMesta(organizacionaCelina);
            for (RadnoMesto radnoMesto : listaRadnihMesta) {
                cmbRadnoMesto.addItem(radnoMesto);
            }
        } catch(Exception ex){
            ex.printStackTrace();
            JOptionPane.showMessageDialog(rootPane, ex.getMessage(), "Doslo je do greske!", JOptionPane.ERROR_MESSAGE);
        }
        
    }
}
